// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrdersApp.Data;

#nullable disable

namespace OrdersApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221125155326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrdersApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("OrdersApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_orders_customer_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("OrdersApp.Models.OrderSku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("SkuId")
                        .HasColumnType("int")
                        .HasColumnName("sku_id");

                    b.Property<decimal>("Sum")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sum");

                    b.HasKey("Id")
                        .HasName("pk_order_skus");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_skus_order_id");

                    b.HasIndex("SkuId")
                        .HasDatabaseName("ix_order_skus_sku_id");

                    b.ToTable("order_skus", (string)null);
                });

            modelBuilder.Entity("OrdersApp.Models.Sku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("SkuCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sku_category_id");

                    b.HasKey("Id")
                        .HasName("pk_skus");

                    b.HasIndex("SkuCategoryId")
                        .HasDatabaseName("ix_skus_sku_category_id");

                    b.ToTable("skus", (string)null);
                });

            modelBuilder.Entity("OrdersApp.Models.SkuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_sku_categories");

                    b.ToTable("sku_categories", (string)null);
                });

            modelBuilder.Entity("OrdersApp.Models.Order", b =>
                {
                    b.HasOne("OrdersApp.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_customers_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrdersApp.Models.OrderSku", b =>
                {
                    b.HasOne("OrdersApp.Models.Order", "Order")
                        .WithMany("OrderSkus")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_skus_orders_order_id");

                    b.HasOne("OrdersApp.Models.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_skus_skus_sku_id");

                    b.Navigation("Order");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("OrdersApp.Models.Sku", b =>
                {
                    b.HasOne("OrdersApp.Models.SkuCategory", "SkuCategory")
                        .WithMany("Skus")
                        .HasForeignKey("SkuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_skus_sku_categories_sku_category_id");

                    b.Navigation("SkuCategory");
                });

            modelBuilder.Entity("OrdersApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrdersApp.Models.Order", b =>
                {
                    b.Navigation("OrderSkus");
                });

            modelBuilder.Entity("OrdersApp.Models.SkuCategory", b =>
                {
                    b.Navigation("Skus");
                });
#pragma warning restore 612, 618
        }
    }
}
